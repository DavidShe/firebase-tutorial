rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /schools/{itemId}{

      allow read: if true

      allow create: if isValidSchool(request.resource.data) &&
      isOwner(request.resource.data) &&
      isSignedIn();

      allow update: if isValidSchool(request.resource.data) &&
      isOwner(resource.data) &&
      isSignedIn() &&
      isCalm();

      allow delete: if isOwner(resource.data) &&
      isSignedIn();

      // FUNCTIONS
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(school) {
        return request.auth.uid == school.owner;
      }

      function isValidSchool(school) {
        return (
        // school.title
        school.title is string &&
        school.title != '' &&
        // school.desc
        school.desc is string &&
        // school.score
        school.score is number &&
        school.score >= 0 &&
        school.score <= 10 &&
        school.score != '' &&
        // school.id
        school.id is string &&
        school.id != '' &&
        // school.owner
        school.owner is string &&
        // school.ownerEmail
        school.ownerEmail is string 
        );
      }


      function isCalm() {
        return ( 
        request.time > resource.data.lastUpdate +
        duration.value(6, 's')
        ); 
      }

    }




  }
}


//firebase deploy --only firestore:rules